---
description: 
globs: 
alwaysApply: true
---

# 项目需求

本项目的任务是创建一个Java语言构建的工具，用于统计C/C++源文件中的代码行、注释行和空行（可选扩展到Ruby，设计一个命令行选项来指定所统计的语言。未来可能扩展到其他语言，需要完成可扩展的设计）。

该程序运行用户输入 cloc dir-of-source-code 后，得到如下示例的代码行数输出统计：
    -----------------------------------------------------
     Files     Lines        Code    Comments      Blanks
    -----------------------------------------------------
        32      7153        6228         442         483
    -----------------------------------------------------
其中，Files用于显示所有处理的文件的数量；Lines用于显示代码的总行数；Code用于显示代码行数的总数量；Comments用于显示注释行的总数量；Blanks用于显示空行的总数量；请注意 Lines = Code (代码行数) + Comments (注释行数) + Blanks (空行数)，提示请自行检查这个断言。

请注意处理所检测的编程语言的语法特征，处理边缘状况。例如，字符串中的注释字符等。


## 以下是主要需求：

1. 统计扩展名为.c、.cpp和.cc的文件中的行数
2. 将每一行分类为：
 - 代码行
 - 注释行
 - 空行
3. 递归遍历目录
4. 处理边缘情况，如字符串中的注释字符
5. 遵循特定的输出格式
6. 可选扩展支持Ruby文件
7. 不⽤考虑一个目录中有多种编程语⾔混合存在的场景

## 主要挑战

### 注释检测：
- C/C++有多种注释风格：//（单行）、/* */（多行）
- Ruby有不同的注释风格：#（单行）、=begin到=end（多行）
- 字符串内部的注释字符应被视为字面文本，不应计为注释

### 行分类：
- 同时包含代码和注释的行应分类为代码行
- 多行注释内的空行计为空行
- 正确处理缩进和仅包含空白的行

### 目录遍历：
- 高效递归遍历目录，文件较多时考虑使用高并发解决方案
- 按扩展名正确过滤文件